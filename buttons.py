from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder

from base import get_link

download = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='‚úÖ –°–ö–ê–ß–ê–¢–¨ OURS', callback_data='download')
)
regions = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è', callback_data='–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è'),
    types.InlineKeyboardButton(text='–§–ª–æ—Ä–∏–¥–∞', callback_data='–§–ª–æ—Ä–∏–¥–∞'),
    types.InlineKeyboardButton(text='–ù—å—é-–ô–æ—Ä–∫', callback_data='–ù—å—é-–ô–æ—Ä–∫'),
    types.InlineKeyboardButton(text='–ò–ª–ª–∏–Ω–æ–π—Å', callback_data='–ò–ª–ª–∏–Ω–æ–π—Å'),
    types.InlineKeyboardButton(text='–ù—å—é-–î–∂–µ—Ä—Å–∏', callback_data='–ù—å—é-–î–∂–µ—Ä—Å–∏'),
    width=1
)

without_b = [
    [types.KeyboardButton(text='üî• –ü–ª–∞—Ç–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞')],
    [types.KeyboardButton(text='üë©‚ÄçüöÄ –ü–æ–¥–¥–µ—Ä–∂–∫–∞'),
     types.KeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ')]
]
with_b = [
    [types.KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞')],
    [types.KeyboardButton(text='üë©‚ÄçüöÄ –ü–æ–¥–¥–µ—Ä–∂–∫–∞'),
     types.KeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ')],
]
actions_with = types.ReplyKeyboardMarkup(keyboard=with_b, resize_keyboard=True)
actions_without = types.ReplyKeyboardMarkup(keyboard=without_b, resize_keyboard=True)
back = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='go_back')
)

i_pay = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–Ø –û–ü–õ–ê–¢–ò–õ', callback_data='i_pay')
)

added_free_post = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ', callback_data='free_post')
)
order = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!', callback_data='ok_order'),
)
verify = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é', callback_data='go_verify'),
    types.InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='order'),
    width=1
)
oper_accept = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–û–¥–æ–±—Ä–∏—Ç—å', callback_data='ok_verify'),
    types.InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='no_verify'),
    width=1
)
truck_pay = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–∫–æ–≤—ã–π –±–∏–∑–Ω–µ—Å', callback_data='ok_truck'),
    types.InlineKeyboardButton(text='–ë–µ–∑ —Ç—Ä–∞–∫–æ–≤–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞', callback_data='no_truck'),
    width=1
)

edit_post = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data='edit_text'),
    types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', callback_data='edit_media'),
    types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back'),
    width=1
)
operator = InlineKeyboardBuilder().row(
    types.InlineKeyboardButton(text='–í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='set_sub'),
    types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='rem_sub'),
    types.InlineKeyboardButton(text='–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º', callback_data='message_for'),
    width=1
)

kb = [
    [types.KeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç")]
]
close_chat = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, one_time_keyboard=True)


async def create_buttons(names):
    buttons = InlineKeyboardBuilder()
    for name in names:
        buttons.row(types.InlineKeyboardButton(text=name, callback_data=f'{await get_link(name)}'))
    else:
        buttons.row(types.InlineKeyboardButton(text='–î–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–∏ –≤ –°–®–ê üöõ', callback_data='@ours_group_trucks'))
        return buttons.as_markup()


async def create_oper_but(chat):
    oper_pay = InlineKeyboardBuilder().row(
        types.InlineKeyboardButton(text='–û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'ok_pay_{chat}'),
        types.InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'no_pay_{chat}'),
        width=1
    )
    return oper_pay.as_markup()
